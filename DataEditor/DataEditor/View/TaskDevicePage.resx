<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v17.1" name="DevExpress.Utils.v17.1, Version=17.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v17.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxNy4xLCBWZXJzaW9uPTE3LjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAADAAAAAwAAAACQUAAAAP
        BQAAAKQGAAAC7gEAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGQSURBVFhH7ZS7SsVAEIYjYuEDWFgIFoIgCGJhrw/gE9iI
        KAhi5QNYiYXiE1hZCRaiYCtiIYiNjVaCdoKlpdf/383AME4uJ+Zi4Qcf2Z3dmck5STb5p2YO4Q3cC7OW
        mYJfGXbGHJSbWGagK84gb+I6zEpwBY/jsDTyS8UPqJmFjE+HWQ4rUIq8MlCCTcj9G3AC8mWUGrtQeIKM
        ZTIMJVFbxGB6texA5i+EWYTzyzj8iW5qrco51Pm3MLOebuhZFeZuxWEgt5Zu6FnEHbT7bG5hnTcoSZ4D
        UDiCEuezlbHGxuy6C49USbS+QPIIvXWLjXt7XJagJGvJAfTWqIWxyTjsHftpknmoY9ZGkMJD0Da0NkYf
        9Bpq+2FjeA21o7AxvIbaRUj202uteA21J5DMQInxcdWCFHxXY+0zJDyc7No4/BVrkIVGwiyiG3wykKLj
        2m1YmQvIIhpdXBiDOm59gJWRImQV6rmm6BPV/1ZP3ENbLA+711qZU7geh4V4jUW+zK3gNaet0mlzgedE
        Z83/OknyDRQsA55DGnGeAAAAAElFTkSuQmCC9wEAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAA
        c3p69AAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGZSURBVFhH7ZU7TsNAEIaX
        l+AESKlBogBEgcQVuACiIieAhp4CcQN6LoClWH6IhsYFokMiLT0dlLRg/ln+gY1xFMePlUD5pFV2xvHO
        59mNY2b8axaNecPIGfrn7wrMGzPktBEqkCTJ9BK48RofS19RPVwBGXEcH/JSdWCwKYvgc4epyqiAzFF8
        SIkPe7EusqAuOglXQBgMBqvaDaamB53YrSpRFFDYiRuG9cHie1Jg2Zh1pkZQARa8ZNqSpuk7p+2BYrec
        WhyB+8atrwp+wg8YfZmrgMyzLFvxJiHgrGxLcRVQVAJbsM9U+6ADjxhH2oEwDNd4yYLz8NJGN3pYXE6y
        fVnxSRdkrqiAFELRJ6YtURRtNBKQhVl0LI5Av/ETY6FXFj1haiIqwPB7/4MgGOnUWFiwtnVRQFAJbEnC
        1A/48qncAL0rphqhAih4wZQF8ZlIMOwOR+DX/ud5Psdpd6gA/oR6ZRKdowIM3ZfQAVPdUhQQcPieIbDF
        sFvKBLyiAtJ2PPk50/5QARS/834ABRVg6B8KHDOcUYIxn1P39ElSBxdSAAAAAElFTkSuQmCCpAEAAIlQ
        TkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMA
        AA7DAcdvqGQAAAFGSURBVFhH7ZaxSgNBEIZXA4KNzyDpbex8AMHOJ9DSlGqhlY9gpZ1gKQRfwc7aToQU
        WlkKir2iM5l/wjLc7eYyu1HED37+CVk23132SMI/HTmn3CWyS6nKF7oNFsitcaGb75lYqkiMKOsyhit0
        iuIS8YaH6BRFBZ4pFzKOUYGmD3lFFxWwmzXdgVP0Erq6wIqM4ZJyI+P4UTyWMbygi2AFDigqYN/T1ypV
        hFkE9CspQkpgQHmTMbxTNmQMO+gipASULbSyhnazSjmSccI+ZVnGVhYofRl92KtnWID5QMd8oplttIt7
        dIwKWM7QygnahUdgiHbhEXhAu2gS4HNxPWXiMzETbQLT0mVtIz8uwD/FlrkK8AaPMk6YqwDDB4k30v+A
        t9GcC6/9e/DdyKUqm+g2qgnYq8zliVIU+zTkKC7Q65hFym8mhG9otXBZ1e7okAAAAABJRU5ErkJgggsB
        AACJUE5HDQoaCgAAAA1JSERSAAAAIAAAACAIBgAAAHN6evQAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMA
        AA7DAAAOwwHHb6hkAAAArUlEQVRYR+3NOwoCQQAE0dUDm3pFLyH4B1dQUfwm2pNJU8EY9ERb8OLqhv5s
        JvMKsd7yqRDrJTR0sZ5CQxfrITR0se5CQxfrJjR0sa5CQxfrIjR0zaJ50SyaF7HOQkMX6yQ0dLGOQkPX
        LJoXsSYy/UHzItZBaOhi9UJDF2svNHTNonnRLJoXsXZCQxdrKzR0sTZCQxdrLTR0sVZCQxdrKTR0I4m0
        EBq6sQxV1HVfpwT99dOUfHQAAAAASUVORK5CYIIL
</value>
  </data>
</root>